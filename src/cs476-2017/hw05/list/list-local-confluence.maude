fmod LIST-EXAMPLE is
  sorts Element List .
  subsorts Element < List .
  op a : -> Element [ctor] .
  op b : -> Element [ctor] .
  op c : -> Element [ctor] .
  op nil : -> List [ctor] .

  op _;_  : List List -> List .
  op _;_  : Element List -> List [ctor] .
  eq (L:List ; P:List) ; Q:List = L:List ; (P:List ; Q:List) .     --- (1) 
  eq L:List ; nil = L:List .                                       --- (2)
  eq nil ; L:List = L:List .                                       --- (3)
endfm

--- Unifing (1) with (1) after renaming
unify (L:List ; M:List) ; N:List =? (O:List ; P:List) ; Q:List  .

---( gives us: 
Solution 1
L:List --> #1:List
M:List --> #2:List
N:List --> #3:List
O:List --> #1:List
P:List --> #2:List
Q:List --> #3:List

giving the critical pair:

    1; (2; 3) , 1; (2 ;3) 

which is trivially joinable.
)

--- Unifing (1) with (2) after renaming
unify (L:List ; P:List) ; Q:List =? R:List ; nil .

---( gives us: 

    Solution 1
    L:List --> #1:List
    P:List --> #2:List
    Q:List --> nil
    R:List --> #1:List ; #2:List

Giving us the critical pair:

    #1:List; (#2:List; nil) and (#1:List; #2:List)

that rewrites to:

    (#1:List ; #2:List) and (#1:List; #2:List)

and so is joinable.
)

--- Unifying (1) and (3) after renaming:
unify (L:List ; P:List) ; Q:List =? nil ; M:List                .

---( has no unifier, and generates no critical pairs )

--- Unifying (2) and (2) after renaming:
unify L:List ; nil =? M:List ; nil                              .

---( gives us: 

    Solution 1
    L:List --> #1:List
    M:List --> #1:List

Giving us the critical pair:

    #1:List and #1:List

that rewrites to:

    #1:List and #1:List

and so is joinable.
)

--- Unifying (2) and (3) after renaming:
unify L:List ; nil =? nil ; M:List                              .


---( gives us: 

    Solution 1
    L:List --> nil
    M:List --> nil

Giving us the critical pair:

    (nil) and (nil)

that rewrites to:

    (nil) and (nil)

and so is joinable.
)

unify nil ; L:List =? nil ; M:List                              .

---( gives us: 

    Solution 1
    L:List --> #1:List
    M:List --> #1:List

Giving us the critical pair:

    (#1) and (#1)

that rewrites to:

    (#1) and (#1)

and so is joinable.
)

quit
